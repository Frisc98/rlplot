CCFLAGS_DEBUG= -Wall -Wpedantic -Wextra -lm -g
CCFLAGS= -DRELEASE -DPLATFORM_DESKTOP -I./raylib/src/ -s -lglfw -Wpedantic -Wextra -lm -Oz -ffast-math -fallow-store-data-races -DRELEASE -flto=auto
#raylib configs
CCFLAGS+= -DEXTERNAL_CONFIG_FLAGS=1 \
  -DSUPPORT_MODULE_RSHAPES=1 \
  -DSUPPORT_MODULE_RTEXTURES=1 \
  -DSUPPORT_MODULE_RTEXT=1 \
  -DSUPPORT_MODULE_RMODELS=1 \
  -DSUPPORT_SSH_KEYBOARD_RPI=1 \
  -DMAX_FILEPATH_CAPACITY=64 \
  -DRL_DEFAULT_BATCH_BUFFERS=1 \
  -DRL_MAX_MATRIX_STACK_SIZE=2 \
  -DSUPPORT_DEFAULT_FONT=1 \
  -DSUPPORT_FILEFORMAT_FNT=1 \
  -DSUPPORT_FILEFORMAT_TTF=1 \
  -DMAX_MATERIAL_MAPS=0 \
  -DMAX_MESH_VERTEX_BUFFERS=7

RL= raylib/src

SOURCE= $(RL)/rmodels.c $(RL)/rshapes.c $(RL)/rtext.c $(RL)/rtextures.c $(RL)/utils.c $(RL)/rcore.c \
        refresh_shaders.c smol_mesh.c main.c points_group.c graph.c q.c read_input.c

SHADERS= SHADER_GRID_FS:shaders/grid.fs SHADER_LINE_FS:shaders/line.fs SHADER_LINE_VS:shaders/line.vs

OBJS= $(patsubst %.c, build/%.o, $(SOURCE))
OBJSDIR= $(sort $(dir $(OBJS)))

bin/rlplot: shaders.h
	$(foreach var,$(OBJSDIR), test -d $(var) || mkdir -p $(var);)
	$(foreach var,$(SOURCE), gcc $(CCFLAGS) -c -o $(patsubst %.c, build/%.o, $(var)) $(var) && ) echo "OK"
	test -d bin || mkdir bin;
	gcc $(CCFLAGS) -o bin/rlplot $(OBJS)

.PHONY: install
install: bin/rlplot
	install bin/rlplot /bin/rlplot


shaders.h: shaders/grid.fs shaders/line.fs shaders/line.vs
	# This will break if there are `"` characters in shaders
	echo "// This file is autogenerated!\n" > shaders.h;
	$(foreach s, $(SHADERS), echo '#define $(word 1, $(subst :, ,$(s))) \' >> shaders.h && \
		                       cat "$(word 2, $(subst :, ,$(s)))" | sed 's/\(.*\)/"\1\\n"\\/' >> shaders.h  && \
													 echo "" >> shaders.h &&) echo "DONE with shaders";

.PHONY: clean
clean:
	rm build/*
	rm bin/*

